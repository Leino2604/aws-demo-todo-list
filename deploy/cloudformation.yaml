AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for deploying a To-Do List application with DynamoDB

Resources:
  TodoDynamoDB:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: TodoTable
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: taskId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: taskId
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  TodoApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: TodoApi
      Description: API for the To-Do List application

  TodoApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt TodoApi.RootResourceId
      PathPart: todos
      RestApiId: !Ref TodoApi

  TodoApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId: !Ref TodoApiResource
      RestApiId: !Ref TodoApi
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${TodoLambda.Arn}/invocations

  TodoLambda:
    Type: AWS::Lambda::Function
    Properties:
      Handler: main
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: your-s3-bucket-name
        S3Key: your-lambda-code.zip
      Runtime: go1.x
      MemorySize: 128
      Timeout: 3

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaDynamoDBPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource: !GetAtt TodoDynamoDB.Arn

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${TodoApi}.execute-api.${AWS::Region}.amazonaws.com/prod/todos"